from sshtunnel import SSHTunnelForwarder
import psycopg2

# SSH configuration and tunnel setup
ssh_host = '137.43.49.32'  # Replace with your SSH server IP or hostname
ssh_port = 22  # Default SSH port
ssh_username = 'student'
ssh_password = 'COMP47360-ResearchPracticum-Group#14'

postgres_host = 'localhost'
postgres_port = 5432  # Local port that will be tunneled to remote PostgreSQL port

# Function to establish SSH tunnel and connect to PostgreSQL
def connect_to_postgres():
    with SSHTunnelForwarder(
        (ssh_host, ssh_port),
        ssh_username=ssh_username,
        ssh_password=ssh_password,
        remote_bind_address=(postgres_host, postgres_port),
        local_bind_address=('localhost', postgres_port)
    ) as tunnel:
        print(f"Tunnel created via {tunnel.local_bind_address}")

        # Connect to PostgreSQL through the SSH tunnel
        conn = psycopg2.connect(
            database='comp47360_db',
            user='brian.mcmahon1',
            password='@dm1n_br1@n5693',
            host=tunnel.local_bind_host,
            port=tunnel.local_bind_port
        )
        print(conn)

        # Example: Execute SQL query
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM vendtune.citibikes;")
        rows = cursor.fetchall()
        for row in rows:
            print(row)

        # Close the PostgreSQL connection
        conn.close()
        print("PostgreSQL connection closed")

# Call the function to establish SSH tunnel and connect to PostgreSQL
if __name__ == '__main__':
    connect_to_postgres()